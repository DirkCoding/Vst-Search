{"version":3,"sources":["serviceWorker.js","components/DropdownInstruments.js","components/Createcard.js","components/Home.js","components/App.js","components/GlobalStyle.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Dropdown","styled","section","withConfig","displayName","componentId","Label","p","DropdownInstruments","searchChange","this","props","react_default","a","createElement","onChange","placeholder","default","libraryData","reduce","instrumentList","libraryItem","concat","sections","instrumentItem","indexOf","push","sort","b","map","instrument","Component","Card","Title","h1","Company","h2","Paragraph","Hyperlink","Image","img","Libraryheader","Librarytext","Information","Createcard","_this$props","title","company","image","url","ensemblepatch","price","src","Home","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","filteredLibraryData","Fragment","components_DropdownInstruments","libraryInformation","components_Createcard","join","App","dropdown","onSearchChange","event","_this","setState","target","_this2","filter","data","includes","components_Home","createGlobalStyle","_templateObject","ReactDOM","render","components_App","GlobalStyle","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f11bdd54.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\n// import styled from 'styled-components'\nimport libraryData from '../resources/library-data.json'\n/*import { array } from '@storybook/addon-knobs'*/\nimport styled from 'styled-components'\n\nconst Dropdown = styled.section`\n  display: grid;\n  display: center;\n  grid-template-columns: 1fr 2fr;\n  grid-template-rows: 1fr 2fr;\n  grid-column: 1 / 2;\n`\nconst Label = styled.p`\n  font-size: 23px;\n  grid-template-rows: 1fr 1fr;\n`\n\nclass DropdownInstruments extends Component {\n  render() {\n    const { searchChange } = this.props\n    return (\n      <Dropdown>\n        <Label>Choose an instrument:</Label>\n        <select onChange={searchChange} placeholder=\"Choose an instrument\">\n          <option default>Select Instrument</option>\n          {// get list of instruments\n          libraryData\n            .reduce(\n              (instrumentList, libraryItem) =>\n                instrumentList.concat(libraryItem.sections),\n              []\n            )\n            .reduce((instrumentList, instrumentItem) => {\n              if (instrumentList.indexOf(instrumentItem) === -1)\n                instrumentList.push(instrumentItem)\n              return instrumentList\n            }, [])\n            .sort((a, b) => (a < b ? -1 : 1))\n            .map(instrument => (\n              <option>{instrument}</option>\n            ))}\n        </select>\n      </Dropdown>\n    )\n  }\n}\nexport default DropdownInstruments\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Card = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n  justify-content: center;\n  margin: 25px auto;\n  padding: 25px;\n  background: white;\n  max-width: 800px;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 0 8px 16px rgba(180, 180, 180, 0.4);\n  border: 1px solid #000;\n`\n\nconst Title = styled.h1`\n  font-size: 23px;\n  grid-column: 2 / 3;\n`\nconst Company = styled.h2`\n  font-size: 18px;\n  grid-column: 2 / 3;\n`\nconst Paragraph = styled.p`\n  font-size: 12px;\n  grid-column: 2 / 3;\n`\n\nconst Hyperlink = styled.a`\n  font-size: 12px;\n  grid-column: 2 / 3;\n`\nconst Image = styled.img`\n  width: 150px;\n  height: 150px;\n  background-position: 50% 50%;\n  background-size: cover;\n  grid-column: 1 / 2;\n  grid-row: 1 / 4;\n  margin: 20px;\n`\n\nconst Libraryheader = styled.section``\nconst Librarytext = styled.section``\nconst Information = styled.section``\n\nclass Createcard extends Component {\n  render() {\n    const {\n      title,\n      company,\n      image,\n      url,\n      ensemblepatch,\n      price,\n      sections\n    } = this.props\n\n    return (\n      <Card>\n        <Information>\n          <Libraryheader>\n            <Title>{title}</Title>\n            <Company>{company}</Company>\n          </Libraryheader>\n          <Librarytext>\n            <Paragraph>Instruments included: {sections}</Paragraph>\n            <Paragraph>Ensemble Patch available: {ensemblepatch}</Paragraph>\n            <Paragraph>Price: {price}</Paragraph>\n            <Hyperlink>Link to manufacturer: {url}</Hyperlink>\n          </Librarytext>\n        </Information>\n        <Image src={image} />\n      </Card>\n    )\n  }\n}\n\nexport default Createcard\n","import React, { Component } from 'react'\nimport DropdownInstruments from './DropdownInstruments'\nimport Createcard from './Createcard'\n\nexport class Home extends Component {\n  render() {\n    const { filteredLibraryData, searchChange } = this.props\n    return (\n      <React.Fragment>\n        <DropdownInstruments searchChange={searchChange} />\n\n        {filteredLibraryData.map(libraryInformation => (\n          <Createcard\n            title={libraryInformation.title}\n            company={libraryInformation.company}\n            image={libraryInformation.image}\n            url={libraryInformation.url}\n            ensemblepatch={libraryInformation.ensemblepatch}\n            price={libraryInformation.price}\n            sections={libraryInformation.sections.join('-')}\n          />\n        ))}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\n// import styled from 'styled-components'\n// import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\n\n// import DropdownInstruments from './DropdownInstruments'\n// import Createcard from './Createcard'\nimport libraryData from '../resources/library-data.json'\nimport Home from './Home'\n\n/*import Home from './Home'\nimport Config from './Config'*/\n\n/*const Wrapper = styled.section`\n  display: grid;\n  grid-template-rows: auto 50px;\n  height: 100vh;\n\n  nav {\n    display: flex;\n  }\n\n  a:any-link {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    color: black;\n    width: 100%;\n    background: #efefef;\n\n    &:first-child {\n      border-right: 1px solid white;\n    }\n\n    &.active {\n      background: deeppink;\n      color: white;\n    }\n  }\n`*/\n\nclass App extends Component {\n  state = {\n    libraryData: libraryData,\n    dropdown: ''\n  }\n\n  onSearchChange = event => {\n    this.setState({ dropdown: event.target.value })\n  }\n\n  render() {\n    const filteredLibraryData = this.state.libraryData.filter(data => {\n      return data.sections.includes(this.state.dropdown)\n    })\n\n    return (\n      <Home\n        filteredLibraryData={filteredLibraryData}\n        searchChange={this.onSearchChange}\n      />\n    )\n  }\n}\nexport default App\n","import { createGlobalStyle } from 'styled-components'\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Montserrat');\n   \n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: 'Montserrat', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n`\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './components/App'\nimport GlobalStyle from './components/GlobalStyle'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <GlobalStyle />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}